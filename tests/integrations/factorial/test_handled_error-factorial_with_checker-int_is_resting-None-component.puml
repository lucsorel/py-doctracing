@startuml tests.modules.factorial.factorial_with_checker-component
skinparam BoxPadding 10
skinparam componentStyle rectangle
set separator .
!pragma useIntermediatePackages false

package tests.modules {
  frame factorial {
    [tests.modules.factorial.factorial_with_checker] as "factorial_with_checker" << @trace_to_component_puml >>
    frame validator {
      [tests.modules.factorial.validator.check_or_wrap_error] as "check_or_wrap_error"
      [tests.modules.factorial.validator.is_positive_int] as "is_positive_int"
      [tests.modules.factorial.validator.raise_value_error] as "raise_value_error"
      [tests.modules.factorial.validator.log_factorial_error] as "log_factorial_error"
    }
  }
}
[tests.modules.factorial.factorial_with_checker] -> [tests.modules.factorial.validator.check_or_wrap_error] : 1
[tests.modules.factorial.factorial_with_checker] <.[thickness=2] [tests.modules.factorial.validator.check_or_wrap_error] #line:darkred;text:darkred : 6:FactorialError
[tests.modules.factorial.validator.check_or_wrap_error] --> [tests.modules.factorial.validator.is_positive_int] : 2
[tests.modules.factorial.validator.check_or_wrap_error] <..[thickness=2] [tests.modules.factorial.validator.is_positive_int] #line:darkred;text:darkred : 5:ValueError
[tests.modules.factorial.validator.is_positive_int] --> [tests.modules.factorial.validator.raise_value_error] : 3
[tests.modules.factorial.validator.is_positive_int] <..[thickness=2] [tests.modules.factorial.validator.raise_value_error] #line:darkred;text:darkred : 4:ValueError
[tests.modules.factorial.factorial_with_checker] -> [tests.modules.factorial.validator.log_factorial_error] : 7
[tests.modules.factorial.factorial_with_checker] <. [tests.modules.factorial.validator.log_factorial_error] : 8

footer Generated by //pydoctrace//
@enduml
